# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'ci'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  DOCKER_REGISTRY: 'us-docker.pkg.dev'
  DOCKER_REPO: 'us-docker.pkg.dev/github-metrics-aggreg-i-64d426/ci-images'
  DOCKER_TAG: '${{ github.sha }}'

  TAG_ID: 'ci-${{ github.run_id }}-${{ github.run_number }}'

  INTEGRATION_PROJECT_ID: 'github-metrics-aggreg-i-64d426'
  INTEGRATION_REGION: 'us-central1'

  INTEGRATION_WEBHOOK_SERVICE_NAME: 'github-metrics-webhook-2578'
  INTEGRATION_WEBHOOK_SERVICE_AUDIENCE: 'https://github-metrics-webhook-2578-u4iwdc42oa-uc.a.run.app'
  INTEGRATION_WEBHOOK_URL: 'https://ci-${{ github.run_id }}-${{ github.run_number }}---github-metrics-webhook-2578-u4iwdc42oa-uc.a.run.app'

  INTEGRATION_RETRY_SERVICE_NAME: 'github-metrics-retry-c415'
  INTEGRATION_RETRY_SERVICE_AUDIENCE: 'https://github-metrics-retry-c415-u4iwdc42oa-uc.a.run.app'
  INTEGRATION_RETRY_URL: 'https://ci-${{ github.run_id }}-${{ github.run_number }}---github-metrics-retry-c415-u4iwdc42oa-uc.a.run.app'

  AUTOPUSH_PROJECT_ID: 'github-metrics-aggreg-a-997e5e'
  AUTOPUSH_REGION: 'us-central1'

  AUTOPUSH_WEBHOOK_SERVICE_NAME: 'github-metrics-webhook-d2e4'
  AUTOPUSH_RETRY_SERVICE_NAME: 'github-metrics-retry-d4e3'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  terraform_lint:
    uses: 'abcxyz/pkg/.github/workflows/terraform-lint.yml@main' # ratchet:exclude
    with:
      directory: 'terraform'
      terraform_version: '1.3.6'

  go_lint:
    uses: 'abcxyz/pkg/.github/workflows/go-lint.yml@main' # ratchet:exclude
    with:
      go_version: '1.21'

  go_test:
    uses: 'abcxyz/pkg/.github/workflows/go-test.yml@main' # ratchet:exclude
    with:
      go_version: '1.21'

  lint_and_unit:
    runs-on: 'ubuntu-latest'
    needs:
      - 'terraform_lint'
      - 'go_lint'
      - 'go_test'
    steps:
      - run: 'echo prechecks complete'

  # Build github-metrics-aggregator image and push to artifact registry
  build:
    runs-on:
      labels: '8-core' # custom 8-core machine for faster tests
    needs:
      - 'lint_and_unit'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.21'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.DOCKER_REGISTRY }}'

      # goreleaser requires a tag to publish images to container registry.
      # We create a local tag to make it happy.
      - run: |-
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -f `date "+%Y%m%d%H%M%S"`

      - name: 'Build the container and push to the registry with goreleaser'
        uses: 'goreleaser/goreleaser-action@b508e2e3ef3b19d4e4146d4f8fb3ba9db644a757' # ratchet:goreleaser/goreleaser-action@v3
        with:
          version: 'v1.12.3' # Manually pinned
          args: 'release -f .goreleaser.docker.yaml --rm-dist --skip-validate'

  deployment_webhook_integration:
    runs-on: 'ubuntu-latest'
    needs:
      - 'build'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services update ${{ env.INTEGRATION_WEBHOOK_SERVICE_NAME }} \
            --project="${{ env.INTEGRATION_PROJECT_ID }}" \
            --region="${{ env.INTEGRATION_REGION }}" \
            --image="${{ env.DOCKER_REPO }}/github-metrics-aggregator:${{ env.DOCKER_TAG }}-amd64" \
            --tag="${{ env.TAG_ID }}"

  deployment_retry_integration:
    runs-on: 'ubuntu-latest'
    needs:
      - 'build'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services update ${{ env.INTEGRATION_RETRY_SERVICE_NAME }} \
            --project="${{ env.INTEGRATION_PROJECT_ID }}" \
            --region="${{ env.INTEGRATION_REGION }}" \
            --image="${{ env.DOCKER_REPO }}/github-metrics-aggregator:${{ env.DOCKER_TAG }}-amd64" \
            --tag="${{ env.TAG_ID }}"

  integration:
    runs-on: 'ubuntu-latest'
    needs:
      - 'deployment_webhook_integration'
      - 'deployment_retry_integration'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.21'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'
          token_format: 'id_token'
          id_token_audience: '${{ env.INTEGRATION_WEBHOOK_SERVICE_AUDIENCE }}'

      - name: 'Run integration tests'
        env:
          TEST_INTEGRATION: 'true'
          PROJECT_ID: '${{ env.INTEGRATION_PROJECT_ID }}'
          DATASET_ID: 'github_metrics.events'
          ID_TOKEN: '${{ steps.auth.outputs.id_token }}'
          GITHUB_WEBHOOK_SECRET: '${{ secrets.INTEGRATION_WEBHOOK_SECRET }}'
          ENDPOINT_URL: '${{ env.INTEGRATION_WEBHOOK_URL }}/webhook'
        run: |-
          go test github.com/abcxyz/github-metrics-aggregator/integration -timeout=15m

  deployment_webhook_autopush:
    if: ${{ github.event_name == 'push' }}
    environment: 'autopush'
    runs-on: 'ubuntu-latest'
    needs:
      - 'integration'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services update ${{ env.AUTOPUSH_WEBHOOK_SERVICE_NAME }} \
            --project="${{ env.AUTOPUSH_PROJECT_ID }}" \
            --region="${{ env.AUTOPUSH_REGION }}" \
            --image="${{ env.DOCKER_REPO }}/github-metrics-aggregator:${{ env.DOCKER_TAG }}-amd64"

  deployment_retry_autopush:
    if: ${{ github.event_name == 'push' }}
    environment: 'autopush'
    runs-on: 'ubuntu-latest'
    needs:
      - 'integration'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services update ${{ env.AUTOPUSH_RETRY_SERVICE_NAME }} \
            --project="${{ env.AUTOPUSH_PROJECT_ID }}" \
            --region="${{ env.AUTOPUSH_REGION }}" \
            --image="${{ env.DOCKER_REPO }}/github-metrics-aggregator:${{ env.DOCKER_TAG }}-amd64"

  deployment_artifact_pipeline_autopush:
    if: ${{ github.event_name == 'push' }}
    environment: 'autopush'
    runs-on: 'ubuntu-latest'
    needs:
      - 'integration'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1
        with:
          install_components: 'beta'

      - name: 'Deploy dataflow pipeline'
        run: |-
          set +e +o pipefail

          ENV_BUCKET_NAME="github-metrics-aggreg-a-997e5e-df-store"
          ENV_NETWORK_NAME="gma-a-df-vpc"
          ENV_SUBNETWORK_NAME="gma-a-df-central1"
          ENV_PROJECT_ID="${{ env.AUTOPUSH_PROJECT_ID }}"
          ENV_TEMPLATE_FILE="./config/artifacts_metadata.json"
          ENV_DATASET="github_metrics"
          ENV_REGION="${{ env.AUTOPUSH_REGION }}"

          GH_PK_SECRET="${{ secrets.GH_PRIVATE_KEY_SECRET }}"
          GH_APP_ID="${{ secrets.GH_APP_ID }}"
          GH_INSTALL_ID="${{ secrets.GH_INSTALL_ID }}"

          BUCKET_NAME="gs://${ENV_BUCKET_NAME}"
          TEMPLATE_FILE="${BUCKET_NAME}/templates/artifacts.json"

          CONTAINER="${{ env.DOCKER_REPO }}/gma-artifact-pipeline:${{ env.DOCKER_TAG }}-amd64"

          BATCH_SIZE=100
          EVENTS_TABLE="${ENV_DATASET}.events"
          ARTIFACTS_TABLE="${ENV_DATASET}.leech_status"
          LOGS_BUCKET_NAME=${ENV_BUCKET_NAME}/artifacts

          gcloud dataflow flex-template build "${TEMPLATE_FILE}" --image "${CONTAINER}" --sdk-language "GO" --metadata-file "${ENV_TEMPLATE_FILE}"

          gcloud beta datapipelines pipeline delete "gma-artifacts" --project="${ENV_PROJECT_ID}" --region "${ENV_REGION}"

          gcloud beta datapipelines pipeline create "gma-artifacts" \
              --project="${ENV_PROJECT_ID}" \
              --region="${ENV_REGION}" \
              --pipeline-type="BATCH" \
              --template-file-gcs-location="${TEMPLATE_FILE}" \
              --network "${ENV_NETWORK_NAME}" \
              --subnetwork "https://www.googleapis.com/compute/v1/projects/${ENV_PROJECT_ID}/regions/${ENV_REGION}/subnetworks/${ENV_SUBNETWORK_NAME}" \
              --schedule="*/15 * * * *" \
              --worker-region="${ENV_REGION}" \
              --disable-public-ips \
              --additional-experiments=use_prime \
              --parameters=batch-size="${BATCH_SIZE}",events-project-id="${ENV_PROJECT_ID}",events-table="${EVENTS_TABLE}",leech-project-id="${ENV_PROJECT_ID}",leech-table="${ARTIFACTS_TABLE}",logs-bucket-name="${LOGS_BUCKET_NAME}",github-app-id="${GH_APP_ID}",github-install-id="${GH_INSTALL_ID}",github-private-key-secret="${GH_PK_SECRET}"
